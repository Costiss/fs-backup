name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.x"

      - name: Get current version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build for Linux
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o fs-backup-linux-amd64 -ldflags="-s -w" .
          chmod +x fs-backup-linux-amd64

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: fs-backup-linux-amd64
          path: fs-backup-linux-amd64

  release:
    permissions:
      contents: write
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: fs-backup-linux-amd64

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            fs-backup-linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
